,nonterminal,first set (set of terminals),,,follow set (set of terminals),,,nullable,endable
"ADDOP,",ADDOP,plus minus or,"TokenType::PLUS, TokenType::MINUS, TokenType::OR","firstSet[NonTerminal::ADDOP] = {TokenType::PLUS, TokenType::MINUS, TokenType::OR};",intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","followSet[NonTerminal::ADDOP] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",no,yes
"APARAMSTAIL,",APARAMSTAIL,comma,TokenType::COMMA,firstSet[NonTerminal::APARAMSTAIL] = {TokenType::COMMA};,rpar,TokenType::RPAR,followSet[NonTerminal::APARAMSTAIL] = {TokenType::RPAR};,yes,no
"ARITHEXPRTAIL,",ARITHEXPRTAIL,plus minus or,"TokenType::PLUS, TokenType::MINUS, TokenType::OR","firstSet[NonTerminal::ARITHEXPRTAIL] = {TokenType::PLUS, TokenType::MINUS, TokenType::OR};",semi eq neq lt gt leq geq comma colon rsqbr rpar,"TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::ARITHEXPRTAIL] = {TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",yes,no
"ASSIGNOP,",ASSIGNOP,assign,TokenType::ASSIGN,firstSet[NonTerminal::ASSIGNOP] = {TokenType::ASSIGN};,intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","followSet[NonTerminal::ASSIGNOP] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",no,no
"CLASSDECLBODY,",CLASSDECLBODY,public private func integer float string id,"TokenType::PUBLIC, TokenType::PRIVATE, TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID","firstSet[NonTerminal::CLASSDECLBODY] = {TokenType::PUBLIC, TokenType::PRIVATE, TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID};",rcurbr,TokenType::RCURBR,followSet[NonTerminal::CLASSDECLBODY] = {TokenType::RCURBR};,yes,no
"EXPRTAIL,",EXPRTAIL,eq neq lt gt leq geq,"TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ","firstSet[NonTerminal::EXPRTAIL] = {TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ};",semi comma colon rsqbr rpar,"TokenType::SEMI, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::EXPRTAIL] = {TokenType::SEMI, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",yes,no
"ARITHEXPR,",ARITHEXPR,intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","firstSet[NonTerminal::ARITHEXPR] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",semi eq neq lt gt leq geq comma colon rsqbr rpar,"TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::ARITHEXPR] = {TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",no,no
"FPARAMSTAIL,",FPARAMSTAIL,comma,TokenType::COMMA,firstSet[NonTerminal::FPARAMSTAIL] = {TokenType::COMMA};,rpar,TokenType::RPAR,followSet[NonTerminal::FPARAMSTAIL] = {TokenType::RPAR};,yes,no
"CLASSMETHOD,",CLASSMETHOD,sr,TokenType::SR,firstSet[NonTerminal::CLASSMETHOD] = {TokenType::SR};,lpar,TokenType::LPAR,followSet[NonTerminal::CLASSMETHOD] = {TokenType::LPAR};,yes,no
"FPARAMS,",FPARAMS,integer float string id,"TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID","firstSet[NonTerminal::FPARAMS] = {TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID};",rpar,TokenType::RPAR,followSet[NonTerminal::FPARAMS] = {TokenType::RPAR};,yes,no
"FUNCDECLTAIL,",FUNCDECLTAIL,void integer float string id,"TokenType::VOID, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID","firstSet[NonTerminal::FUNCDECLTAIL] = {TokenType::VOID, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID};",lcurbr semi,"TokenType::LCURBR, TokenType::SEMI","followSet[NonTerminal::FUNCDECLTAIL] = {TokenType::LCURBR, TokenType::SEMI};",no,no
"FUNCORASSIGNSTATIDNESTFUNCTAIL,",FUNCORASSIGNSTATIDNESTFUNCTAIL,dot,TokenType::DOT,firstSet[NonTerminal::FUNCORASSIGNSTATIDNESTFUNCTAIL] = {TokenType::DOT};,semi,TokenType::SEMI,followSet[NonTerminal::FUNCORASSIGNSTATIDNESTFUNCTAIL] = {TokenType::SEMI};,yes,no
"FUNCORASSIGNSTATIDNESTVARTAIL,",FUNCORASSIGNSTATIDNESTVARTAIL,dot assign,"TokenType::DOT, TokenType::ASSIGN","firstSet[NonTerminal::FUNCORASSIGNSTATIDNESTVARTAIL] = {TokenType::DOT, TokenType::ASSIGN};",semi,TokenType::SEMI,followSet[NonTerminal::FUNCORASSIGNSTATIDNESTVARTAIL] = {TokenType::SEMI};,no,no
"FUNCORASSIGNSTATIDNEST,",FUNCORASSIGNSTATIDNEST,lpar lsqbr dot assign,"TokenType::LPAR, TokenType::LSQBR, TokenType::DOT, TokenType::ASSIGN","firstSet[NonTerminal::FUNCORASSIGNSTATIDNEST] = {TokenType::LPAR, TokenType::LSQBR, TokenType::DOT, TokenType::ASSIGN};",semi,TokenType::SEMI,followSet[NonTerminal::FUNCORASSIGNSTATIDNEST] = {TokenType::SEMI};,no,no
"ASSIGNSTATTAIL,",ASSIGNSTATTAIL,assign,TokenType::ASSIGN,firstSet[NonTerminal::ASSIGNSTATTAIL] = {TokenType::ASSIGN};,semi,TokenType::SEMI,followSet[NonTerminal::ASSIGNSTATTAIL] = {TokenType::SEMI};,no,no
"FUNCORVAR,",FUNCORVAR,id,TokenType::ID,firstSet[NonTerminal::FUNCORVAR] = {TokenType::ID};,mult div and semi eq neq lt gt leq geq plus minus or comma colon rsqbr rpar,"TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::FUNCORVAR] = {TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",no,no
"FUNCORVARIDNESTTAIL,",FUNCORVARIDNESTTAIL,dot,TokenType::DOT,firstSet[NonTerminal::FUNCORVARIDNESTTAIL] = {TokenType::DOT};,mult div and semi eq neq lt gt leq geq plus minus or comma colon rsqbr rpar,"TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::FUNCORVARIDNESTTAIL] = {TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",yes,no
"FUNCORVARIDNEST,",FUNCORVARIDNEST,lpar lsqbr dot,"TokenType::LPAR, TokenType::LSQBR, TokenType::DOT","firstSet[NonTerminal::FUNCORVARIDNEST] = {TokenType::LPAR, TokenType::LSQBR, TokenType::DOT};",mult div and semi eq neq lt gt leq geq plus minus or comma colon rsqbr rpar,"TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::FUNCORVARIDNEST] = {TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",yes,no
"APARAMS,",APARAMS,intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","firstSet[NonTerminal::APARAMS] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",rpar,TokenType::RPAR,followSet[NonTerminal::APARAMS] = {TokenType::RPAR};,yes,no
"FUNCSTATTAILIDNEST,",FUNCSTATTAILIDNEST,dot,TokenType::DOT,firstSet[NonTerminal::FUNCSTATTAILIDNEST] = {TokenType::DOT};,semi,TokenType::SEMI,followSet[NonTerminal::FUNCSTATTAILIDNEST] = {TokenType::SEMI};,yes,no
"FUNCSTATTAIL,",FUNCSTATTAIL,dot lpar lsqbr,"TokenType::DOT, TokenType::LPAR, TokenType::LSQBR","firstSet[NonTerminal::FUNCSTATTAIL] = {TokenType::DOT, TokenType::LPAR, TokenType::LSQBR};",semi,TokenType::SEMI,followSet[NonTerminal::FUNCSTATTAIL] = {TokenType::SEMI};,no,no
"FUNCTION,",FUNCTION,func,TokenType::FUNC,firstSet[NonTerminal::FUNCTION] = {TokenType::FUNC};,main func,"TokenType::MAIN, TokenType::FUNC","followSet[NonTerminal::FUNCTION] = {TokenType::MAIN, TokenType::FUNC};",no,no
"FUNCHEAD,",FUNCHEAD,func,TokenType::FUNC,firstSet[NonTerminal::FUNCHEAD] = {TokenType::FUNC};,lcurbr,TokenType::LCURBR,followSet[NonTerminal::FUNCHEAD] = {TokenType::LCURBR};,no,no
"INHERIT,",INHERIT,inherits,TokenType::INHERITS,firstSet[NonTerminal::INHERIT] = {TokenType::INHERITS};,lcurbr,TokenType::LCURBR,followSet[NonTerminal::INHERIT] = {TokenType::LCURBR};,yes,no
"INTNUM,",INTNUM,intnum,TokenType::INTNUM,firstSet[NonTerminal::INTNUM] = {TokenType::INTNUM};,rsqbr,TokenType::RSQBR,followSet[NonTerminal::INTNUM] = {TokenType::RSQBR};,yes,no
"MEMBERDECL,",MEMBERDECL,func integer float string id,"TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID","firstSet[NonTerminal::MEMBERDECL] = {TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID};",public private func integer float string id rcurbr,"TokenType::PUBLIC, TokenType::PRIVATE, TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID, TokenType::RCURBR","followSet[NonTerminal::MEMBERDECL] = {TokenType::PUBLIC, TokenType::PRIVATE, TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID, TokenType::RCURBR};",no,no
"FUNCDECL,",FUNCDECL,func,TokenType::FUNC,firstSet[NonTerminal::FUNCDECL] = {TokenType::FUNC};,public private func integer float string id rcurbr,"TokenType::PUBLIC, TokenType::PRIVATE, TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID, TokenType::RCURBR","followSet[NonTerminal::FUNCDECL] = {TokenType::PUBLIC, TokenType::PRIVATE, TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID, TokenType::RCURBR};",no,no
"METHODBODYVAR,",METHODBODYVAR,var,TokenType::VAR,firstSet[NonTerminal::METHODBODYVAR] = {TokenType::VAR};,if while read write return break continue id rcurbr,"TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID, TokenType::RCURBR","followSet[NonTerminal::METHODBODYVAR] = {TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID, TokenType::RCURBR};",yes,no
"NESTEDID,",NESTEDID,comma,TokenType::COMMA,firstSet[NonTerminal::NESTEDID] = {TokenType::COMMA};,lcurbr,TokenType::LCURBR,followSet[NonTerminal::NESTEDID] = {TokenType::LCURBR};,yes,no
"CLASSDECL,",CLASSDECL,class,TokenType::CLASS,firstSet[NonTerminal::CLASSDECL] = {TokenType::CLASS};,func main,"TokenType::FUNC, TokenType::MAIN","followSet[NonTerminal::CLASSDECL] = {TokenType::FUNC, TokenType::MAIN};",yes,no
"FUNCDEF,",FUNCDEF,func,TokenType::FUNC,firstSet[NonTerminal::FUNCDEF] = {TokenType::FUNC};,main,TokenType::MAIN,followSet[NonTerminal::FUNCDEF] = {TokenType::MAIN};,yes,no
"FUNCBODY,",FUNCBODY,lcurbr,TokenType::LCURBR,firstSet[NonTerminal::FUNCBODY] = {TokenType::LCURBR};,main func,"TokenType::MAIN, TokenType::FUNC","followSet[NonTerminal::FUNCBODY] = {TokenType::MAIN, TokenType::FUNC};",no,no
"RELOP,",RELOP,eq neq lt gt leq geq,"TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ","firstSet[NonTerminal::RELOP] = {TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ};",intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","followSet[NonTerminal::RELOP] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",no,no
"SIGN,",SIGN,plus minus,"TokenType::PLUS, TokenType::MINUS","firstSet[NonTerminal::SIGN] = {TokenType::PLUS, TokenType::MINUS};",intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","followSet[NonTerminal::SIGN] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",no,no
"START,",START,main class func,"TokenType::MAIN, TokenType::CLASS, TokenType::FUNC","firstSet[NonTerminal::START] = {TokenType::MAIN, TokenType::CLASS, TokenType::FUNC};",?,TokenType::?,followSet[NonTerminal::START] = {TokenType::?};,no,no
"PROG,",PROG,main class func,"TokenType::MAIN, TokenType::CLASS, TokenType::FUNC","firstSet[NonTerminal::PROG] = {TokenType::MAIN, TokenType::CLASS, TokenType::FUNC};",?,TokenType::?,followSet[NonTerminal::PROG] = {TokenType::?};,no,no
"FUNCORASSIGNSTAT,",FUNCORASSIGNSTAT,id,TokenType::ID,firstSet[NonTerminal::FUNCORASSIGNSTAT] = {TokenType::ID};,semi,TokenType::SEMI,followSet[NonTerminal::FUNCORASSIGNSTAT] = {TokenType::SEMI};,no,no
"STATBLOCK,",STATBLOCK,lcurbr if while read write return break continue id,"TokenType::LCURBR, TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID","firstSet[NonTerminal::STATBLOCK] = {TokenType::LCURBR, TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID};",else semi,"TokenType::ELSE, TokenType::SEMI","followSet[NonTerminal::STATBLOCK] = {TokenType::ELSE, TokenType::SEMI};",yes,no
"EXPR,",EXPR,intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","firstSet[NonTerminal::EXPR] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",semi comma colon rsqbr rpar,"TokenType::SEMI, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::EXPR] = {TokenType::SEMI, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",no,no
"STATEMENT,",STATEMENT,if while read write return break continue id,"TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID","firstSet[NonTerminal::STATEMENT] = {TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID};",if while read write return break continue id else semi rcurbr,"TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID, TokenType::ELSE, TokenType::SEMI, TokenType::RCURBR","followSet[NonTerminal::STATEMENT] = {TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID, TokenType::ELSE, TokenType::SEMI, TokenType::RCURBR};",no,no
"STATEMENTLIST,",STATEMENTLIST,if while read write return break continue id,"TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID","firstSet[NonTerminal::STATEMENTLIST] = {TokenType::IF, TokenType::WHILE, TokenType::READ, TokenType::WRITE, TokenType::RETURN, TokenType::BREAK, TokenType::CONTINUE, TokenType::ID};",rcurbr,TokenType::RCURBR,followSet[NonTerminal::STATEMENTLIST] = {TokenType::RCURBR};,yes,no
"TERM,",TERM,intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","firstSet[NonTerminal::TERM] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",semi eq neq lt gt leq geq plus minus or comma colon rsqbr rpar,"TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::TERM] = {TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",no,no
"MULTOP,",MULTOP,mult div and,"TokenType::MULT, TokenType::DIV, TokenType::AND","firstSet[NonTerminal::MULTOP] = {TokenType::MULT, TokenType::DIV, TokenType::AND};",intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","followSet[NonTerminal::MULTOP] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",no,no
"FACTOR,",FACTOR,intnum floatnum stringlit lpar not qm id plus minus,"TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS","firstSet[NonTerminal::FACTOR] = {TokenType::INTNUM, TokenType::FLOATNUM, TokenType::STRINGLIT, TokenType::LPAR, TokenType::NOT, TokenType::QM, TokenType::ID, TokenType::PLUS, TokenType::MINUS};",mult div and semi eq neq lt gt leq geq plus minus or comma colon rsqbr rpar,"TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::FACTOR] = {TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",no,no
"TERMTAIL,",TERMTAIL,mult div and,"TokenType::MULT, TokenType::DIV, TokenType::AND","firstSet[NonTerminal::TERMTAIL] = {TokenType::MULT, TokenType::DIV, TokenType::AND};",semi eq neq lt gt leq geq plus minus or comma colon rsqbr rpar,"TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::TERMTAIL] = {TokenType::SEMI, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",yes,no
"TYPE,",TYPE,integer float string id,"TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID","firstSet[NonTerminal::TYPE] = {TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID};",lcurbr semi id,"TokenType::LCURBR, TokenType::SEMI, TokenType::ID","followSet[NonTerminal::TYPE] = {TokenType::LCURBR, TokenType::SEMI, TokenType::ID};",no,no
"ARRAYSIZEREPT,",ARRAYSIZEREPT,lsqbr,TokenType::LSQBR,firstSet[NonTerminal::ARRAYSIZEREPT] = {TokenType::LSQBR};,rpar comma semi,"TokenType::RPAR, TokenType::COMMA, TokenType::SEMI","followSet[NonTerminal::ARRAYSIZEREPT] = {TokenType::RPAR, TokenType::COMMA, TokenType::SEMI};",yes,no
"VARDECL,",VARDECL,integer float string id,"TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID","firstSet[NonTerminal::VARDECL] = {TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID};",public private func integer float string id rcurbr,"TokenType::PUBLIC, TokenType::PRIVATE, TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID, TokenType::RCURBR","followSet[NonTerminal::VARDECL] = {TokenType::PUBLIC, TokenType::PRIVATE, TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID, TokenType::RCURBR};",no,no
"VARDECLREP,",VARDECLREP,integer float string id,"TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID","firstSet[NonTerminal::VARDECLREP] = {TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID};",rcurbr,TokenType::RCURBR,followSet[NonTerminal::VARDECLREP] = {TokenType::RCURBR};,yes,no
"VARIABLE,",VARIABLE,id,TokenType::ID,firstSet[NonTerminal::VARIABLE] = {TokenType::ID};,rpar,TokenType::RPAR,followSet[NonTerminal::VARIABLE] = {TokenType::RPAR};,no,no
"INDICEREP,",INDICEREP,lsqbr,TokenType::LSQBR,firstSet[NonTerminal::INDICEREP] = {TokenType::LSQBR};,mult div and semi assign dot eq neq lt gt leq geq plus minus or comma colon rsqbr rpar,"TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::ASSIGN, TokenType::DOT, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR","followSet[NonTerminal::INDICEREP] = {TokenType::MULT, TokenType::DIV, TokenType::AND, TokenType::SEMI, TokenType::ASSIGN, TokenType::DOT, TokenType::EQ, TokenType::NEQ, TokenType::LT, TokenType::GT, TokenType::LEQ, TokenType::GEQ, TokenType::PLUS, TokenType::MINUS, TokenType::OR, TokenType::COMMA, TokenType::COLON, TokenType::RSQBR, TokenType::RPAR};",yes,no
"VARIABLEIDNESTTAIL,",VARIABLEIDNESTTAIL,dot,TokenType::DOT,firstSet[NonTerminal::VARIABLEIDNESTTAIL] = {TokenType::DOT};,rpar,TokenType::RPAR,followSet[NonTerminal::VARIABLEIDNESTTAIL] = {TokenType::RPAR};,yes,no
"VARIABLEIDNEST,",VARIABLEIDNEST,lsqbr dot,"TokenType::LSQBR, TokenType::DOT","firstSet[NonTerminal::VARIABLEIDNEST] = {TokenType::LSQBR, TokenType::DOT};",rpar,TokenType::RPAR,followSet[NonTerminal::VARIABLEIDNEST] = {TokenType::RPAR};,yes,no
"VISIBILITY,",VISIBILITY,public private,"TokenType::PUBLIC, TokenType::PRIVATE","firstSet[NonTerminal::VISIBILITY] = {TokenType::PUBLIC, TokenType::PRIVATE};",func integer float string id,"TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID","followSet[NonTerminal::VISIBILITY] = {TokenType::FUNC, TokenType::INTEGER, TokenType::FLOAT, TokenType::STRING, TokenType::ID};",yes,no
